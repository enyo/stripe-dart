part of '../../../messages.dart';

/// https://stripe.com/docs/api/products/create
@JsonSerializable()
class CreateProductRequest {
  /// An identifier will be randomly generated by Stripe.
  /// You can optionally override this ID, but the ID must be unique across all products in your Stripe account.
  final String? id;

  /// The product’s name, meant to be displayable to the customer. (REQUIRED)
  final String name;

  /// Whether the product is currently available for purchase. Defaults to true.
  final bool active;

  /// The product’s description, meant to be displayable to the customer.
  /// Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
  final String? description;

  /// Set of key-value pairs that you can attach to an object.
  /// This can be useful for storing additional information about the object in a structured format.
  /// Individual keys can be unset by posting an empty value to them.
  /// All keys can be unset by posting an empty value to metadata.
  final Map<String, dynamic>? metadata;

  /// Default price data for the product.
  final Map<String, dynamic>? defaultPriceData;

  /// Optional array of hashes representing features.
  final List<Map<String, dynamic>>? features;

  /// Optional images for the product.
  final List<String>? images;

  /// Optional package dimensions for the product.
  final Map<String, dynamic>? packageDimensions;

  /// Optional flag indicating whether the product is shippable.
  final bool? shippable;

  /// Optional statement descriptor for the product.
  final String? statementDescriptor;

  /// Optional tax code for the product.
  final String? taxCode;

  /// Optional unit label for the product.
  final String? unitLabel;

  /// Optional URL for the product.
  final String? url;

  CreateProductRequest({
    this.id,
    required this.name,
    this.active = true,
    this.description,
    this.metadata,
    this.defaultPriceData,
    this.features,
    this.images,
    this.packageDimensions,
    this.shippable,
    this.statementDescriptor,
    this.taxCode,
    this.unitLabel,
    this.url,
  });

  factory CreateProductRequest.fromJson(Map<String, dynamic> json) =>
      _$CreateProductRequestFromJson(json);
  Map<String, dynamic> toJson() => _$CreateProductRequestToJson(this);
}
